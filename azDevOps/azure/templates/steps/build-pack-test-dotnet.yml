parameters:
  test_path: ''
  package_path: ''
  package_feed: ''
  # .NET Core version variables
  dotnet_major_version: '2'
  dotnet_minor_version: '2'
  dotnet_patch_version: 'x'

steps:
- bash: |
    echo 'Testing ${{ parameters.test_path }}'
    echo 'Building ${{ parameters.package_path }}'
    echo 'Restoring from ${{ parameters.package_feed }}'
  displayName: 'Display: Package Path Info'

- bash: |
    echo "##vso[task.setvariable variable=dotnet_sdk_version]${{ parameters.dotnet_major_version }}.${{ parameters.dotnet_minor_version }}.${{ parameters.dotnet_patch_version }}"
  displayName: 'Setting .NET Core SDK full version string'

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnet_sdk_version)'
  inputs:
    packageType: sdk
    version: $(dotnet_sdk_version)
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Build: Restore'
  inputs:
    command: 'restore'
    projects: '${{ parameters.package_path }}**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: '${{ parameters.package_feed }}'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'Test: Unit Tests'
  inputs:
    command: 'test'
    projects: '${{ parameters.test_path }}/*.csproj'
    arguments: '--no-restore'
    failOnStderr: true

# Pack NuGet packages.
- task: DotNetCoreCLI@2
  displayName: 'Build: Pack'
  inputs:
    command: 'pack'
    configuration: 'release'
    arguments: '--no-restore'
    versioningScheme: byEnvVar
    versionEnvVar: Build.BuildNumber
    packagesToPack: '${{ parameters.package_path }}/*.csproj'
