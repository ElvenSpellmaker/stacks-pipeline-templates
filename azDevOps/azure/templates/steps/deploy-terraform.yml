parameters:
  # Terraform Basic Config
  terraform_artefact_path: ''
  terraform_output_artefact: 'tfoutputs'
  # Global Config
  company: 'amido'
  project: 'stacks'
  environment: ''
  # Azure config
  location: 'uksouth'
  tags: ''
  # Terraform Resource Specific Config
  terraform_extra_properties: {}
  terraform_output_commands: ''

steps:

- bash: terraform plan -input=false -out=tfplan
  displayName: 'Terraform: Plan'
  workingDirectory: ${{ parameters.terraform_artefact_path }}
  env:
    # Authentication (this comes from the AzureDevOps library as secured variables)
    ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
    ARM_CLIENT_ID: $(azure_client_id)
    ARM_CLIENT_SECRET: $(azure_client_secret)
    ARM_TENANT_ID: $(azure_tenant_id)
    # Terraform
    TF_VAR_name_company: ${{ parameters.company }}
    TF_VAR_name_environment: ${{ parameters.environment }}
    TF_VAR_name_project: ${{ parameters.project }}
    # Resource Group
    TF_VAR_resource_group_location_env: ${{ parameters.location }}
    TF_VAR_resource_group_tags: ${{ parameters.tags }}
    # Extra Parameters
    ${{ each var in parameters.terraform_extra_properties }}:
      TF_VAR_${{ var.key }}: ${{ var.value }}

- bash: terraform apply tfplan
  displayName: 'Terraform: Apply'
  workingDirectory: ${{ parameters.terraform_artefact_path }}
  env:
    # Authentication
    ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
    ARM_CLIENT_ID: $(azure_client_id)
    ARM_CLIENT_SECRET: $(azure_client_secret)
    ARM_TENANT_ID: $(azure_tenant_id)
    # Terraform
    TF_VAR_name_company: ${{ parameters.company }}
    TF_VAR_name_project: ${{ parameters.project }}
    TF_VAR_name_environment: ${{ parameters.env }}
    # Resource Group
    TF_VAR_resource_group_location_env: ${{ parameters.location }}
    TF_VAR_resource_group_tags: ${{ parameters.tags }}
    # Extra Parameters
    ${{ each var in parameters.terraform_extra_properties }}:
      TF_VAR_${{ var.key }}: ${{ var.value }}

- bash: ${{ parameters.terraform_output_commands }}
  displayName: 'Terraform: Write Outputs to Variables'
  workingDirectory: ${{ parameters.terraform_artefact_path }}
  name: ${{ parameters.terraform_output_artefact }}
